[ GIThub ]
    1. https://github.com
    2. 버전관리 서비스 ( VCS )
    3. 소스코드를 GIThub 서버에 저장하고 다른 사람과 동시에 병렬 관리가 가능하다.
    4. 특징
        1. 소프트웨어 개발에서 소스코드를 효과적으로 관리 , 무료
        2. 개발 프로젝트내 폴더 작업을 기록하고 버전(과거) 관리 , 추적
        3. 여러 사람들과 동일한 프로젝트(저장소-리포지토리)를 병령 작업
    5. 대표 용어
        1. Repository : 저장소 / 프로젝트의 파일이나 폴더를 저장하는 저장소
        2. Commit : 파일을 추가 / 변경 된 내용을 저장소(현재pc,로컬)에 저장하는 작업
        3. push : 추가 / 변경 된 내용을 원격(GIThub) 저장소에 업로드 작업

    6. 저장소 만드는 사람/계정 , 파일 commit/push 이름/아이디 별도 존재한다.

[ vscode 와 github 연동 ]
    1. github 로 부터 회원가입
    2. git 설치 : https://git-scm.com/downloads/win
    3. [64-bit Git for Windows Setup.]
    4. [vscode 재실행] 후 왼쪽 메뉴에 [소스 제어]탭 클릭
    5. [Github 게시] -> [로그인] -> 웹페이지[git]로그인 진행 -> [continue]
    6. Publish to Github public repository [본인아이디]/프로젝트명(최상위폴더명) --> 선택 클릭 --> [확인]

    ---> * 최초/pc변경시 git 사용시 : git 에서 'user.name' 및 'user.email'를 구성해야 합니다.
    
    7. [vscode 상단메뉴] -> [터미널]-> [새터미널] -> [+]옆에 [v] 클릭 -> [git bash]
    8
        [ git user.name 확인 ] git config --global user.name
        [ git user.name 설정 ] git config --global user.name git아이디
        [ git user.email 확인 ] git config --global user.email 
        [ git user.email 확인 ] git config --global user.email git아이디@이메일포함
    9. [vscode 왼쪽 메뉴] 에 [소스 제어]탭 클릭-> [메세지 입력칸 = 기록 메세지]
    10. [ 커밋 및 푸시 ]
        * 만일 최초/pc변경시 git 사용이면 [ git 로그인 ]창 나오면 브라우저 로그인 처리

[ GIT PAGE ]
    - git 에서 코드 저장소(리포지토리)의 코드를 호스팅 할 수 있는 기능
    1. 호스팅할 저장소의 메인페이지 파일명을 'index.html'
    2. 본인 github 홈페이지 점속
    3. [new] 또는 [ new repository ]
    4. creat a new repository
        - Repository name : tolist(임의로 아무거나)
        - public
                [ create repository ]
    5. 빈 리포지토리에 화면 가운데 'uploading an existing file' 클릭
    6. 'index.html' 파일을 드래그 해서 업로드 , css/js 다른 html 포함
        -> index.html 파일은 피로지토리에 최상위 경로에 있어야한다.
        [ commit change ]
    7. 리포지토리 상단 메뉴에 [ setting ] 클릭
    8. 왼쪽 사이드 메뉴에 [ Pages ] 클릭
    9. [Branch] 항목에서
        [none][Save] ---> [margin][/root][save]
    10. 1~2분 기다리기 : 새로고침 -> Your site is live at https://xxxxx.github.io/xxxx

    git page io (포트폴리오)

[ 로컬저장소(PC), 원격저장소{gitHub server} ]

    - https://github.com/PHM-dung2/tj2024b_front ( 원격 저장소 ) : 깃허브 회사의 서버실에 코드 저장
    - clone(복제) : 원격 저장소로 부터 로컬 저장소로 가져오는 행위
    - commit(완료) : 로컬 저장소로 부터 코드를 저장 행위
    - push : 로컬 저장소로 부터 완료(commit)된 코드들을 원격으로 올리기/업로드 행위
        - commit and push
    - PULL : 원격 저장소로 부터 상태를 다운로드 행위 

--- 현재 강의에서의 gitHub 구조

    1.git회사PC
        원격저장소 : https://github.com/PHM-dung2/tj2024b_front
    2.학원의 내PC
        로컬저장소 : tj2024b_front
    3. 집/노트북 내PC 
        로컬저장소 : kim/tj2024b_front

[ 버전 관리 ] VCS

    12/12 13:02
        [원격] https://github.com/PHM-dung2/tj2024b_backend 1.0
        [학원로컬] tj2024b_front 1.0
    12/12 20:02
        저장소 복제
        [집로컬] kim/tj2024b_front 1.0
    12/12 22:00
        [집로컬] kim/tj2024b_front ---> 1.4 PUSH [원격]1.1
    12/13 9:30
        학원도착 , 만일 집에서 PUSH한적 있거나 저장소의 상태(버전) 변화가 있으면
        [학원로컬] pull
    12/13 18:29
        [학원로컬] tj2024b_front ---> 1.2 PUSH [원격]1.2
    12/13 20:00
        [집도착] pull ---> 1.2
    12/13 22:00
        [집로컬] kim/tj2024b_front ---> 1.3 PUSH [원격] 1.3
    12/14 9:30
        학원도착 , pull

[ 브랜치 / 분기 ]
    1. 정의 : 프로젝트를 하나의 저장소에서 각 브랜치마다 서로 다른 저장 상태/버전 관리할 수 있도록 지원하는 기능
    2. 목적 : 1. 프로젝트 버전관리( 배포 , 테스트용 등등 ) 2. 협업간의 각 사람들마다 코드 구분/분류
        - 기본값 브랜치 는 master/margin
        - master/main 브랜치를 한사람이 사용하면 문제 없지만 , 여러사람이 동일한 브랜치로 동일한 저장소 사용하면 관리 힘들다.

[ 브랜치 생성 / 운영 ] - vscode
    [ 1. 브랜치 생성 ]
        방법1. 소스제어 ---> ... -> 새분기 만들기
        방법2. 오른쪽 하단에 main(브랜치명) 클릭
        2. 브랜치명 아무거나(영문 권장) 입력후 엔터
            * 브랜치생성은 로컬에 생성되었기 때문에 원격저장소에 적용하기위해 PUSH
        3. 브랜치생성후 최초1번은 push( 또는 브랜치 게시 ) 해야한다.
    
    [ 2. 로컬에서 브랜치 변경 ] * 체크아웃 
        방법1 : 소스제어 ---> ··· ---> 분기 ---> 분기 다시 지정 
        방법2 : 오른쪽 하단에 main(현재브랜치) 클릭
        * 주의할점 브랜치 변경시 현재 상태를 commit/push 완료후 에 하는걸 권장 

[ 학원 자리 변경 전 ]
    1. 개인 카카오톡 로그아웃
    2. 인터넷( 네이버/github/페이스북 등등 ) 로그아웃
    3. vscode , 이클립스 코드 최종 push 하기
    4. vscode github 회원정보 해제
        1. 제어판 , ( 윈도우 버튼 --> 자격증명관리자 )
        2. '자격증명관리자'
        3. [ window 자격 증명 ] 클릭
        4. 하단에 일반 자격증명 목록 에서 github.com 클릭
        5. [ 제거 ]

[ 학원 자리 변경 후 ]
    - vscode 터미널 git bash --> commit/push git 계정 정보 변경
        git config --global user.name git아이디
        git config --global user.email git이메일
